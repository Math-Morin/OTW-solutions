:PROPERTIES:
:ID:       04a1eb05-1de8-4629-9073-71aebd900829
:END:
#+title: Natas8
* Previous
[[id:2f0c9708-04e6-4978-a6bd-5350e4f35804][Natas7]]

* Password
DBfUBfqQG69KvJvJ1iAbMoIpwSNQ9bWe

* Flag
W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl

* Notes

Source code is obfuscated with lots of HTML entities.
Using the `html` and `beautifulsoup4` modules, we can clear things up.

We then find an "encoded secret" variable:
    #+begin_quote
    $encodedSecret = "3d3d516343746d4d6d6c315669563362"
    #+end_quote

and the function to encoded it:
    #+begin_quote
    return bin2hex(strrev(base64_encode($secret)));
    #+end_quote

Using cyberchef, we can invert the encoding function, which yields:
    #+begin_quote
    oubWYf2kBq
    #+end_quote

We can then POST the "secret" tog et the password.

#+begin_src python :results output
#!/usr/bin/env python3

import requests
import re
import html
from bs4 import BeautifulSoup as bs
from natas_pass import passwords

session = requests.Session()
username = "natas8"
password = passwords[username]

url = "http://{}.natas.labs.overthewire.org/".format(username)

# Get the source code
# response = session.get(url + "index-source.html", auth=(username, password))
# raw_content = response.text
# sourcecode = html.unescape(raw_content)
# soup = bs(sourcecode)
# print(soup.prettify())


response = session.post(
    url,
    auth=(username,password),
    data={"submit": "", "secret": "oubWYf2kBq"}
)
content = response.text
p = re.findall("([a-zA-Z0-9]{32})", content)

if p and p[0] == password:
    p.pop(0)

print(p[0])
#+end_src

#+RESULTS:
: W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl

* Next
[[id:91399b5f-500e-4e34-b6f1-f37f8148be9f][Natas9]]
